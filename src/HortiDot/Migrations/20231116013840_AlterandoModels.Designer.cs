// <auto-generated />
using System;
using HortiDot.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HortiDot.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231116013840_AlterandoModels")]
    partial class AlterandoModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HortiDot.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Pedido")
                        .HasColumnType("integer");

                    b.Property<int>("StatusPedidos")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Pedido");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("HortiDot.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Produto")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Produto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("HortiDot.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoDeUsuario")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Usuários");
                });

            modelBuilder.Entity("HortiDot.Models.Pedido", b =>
                {
                    b.HasOne("HortiDot.Models.Usuario", "Fornecedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("Pedido");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("HortiDot.Models.Produto", b =>
                {
                    b.HasOne("HortiDot.Models.Pedido", null)
                        .WithMany("ListaProdutos")
                        .HasForeignKey("Produto");
                });

            modelBuilder.Entity("HortiDot.Models.Pedido", b =>
                {
                    b.Navigation("ListaProdutos");
                });

            modelBuilder.Entity("HortiDot.Models.Usuario", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
